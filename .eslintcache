[{"C:\\Users\\sique\\OneDrive\\Documentos\\Projetos\\clonenetflix\\src\\index.js":"1","C:\\Users\\sique\\OneDrive\\Documentos\\Projetos\\clonenetflix\\src\\App.js":"2","C:\\Users\\sique\\OneDrive\\Documentos\\Projetos\\clonenetflix\\src\\Tmdb.js":"3","C:\\Users\\sique\\OneDrive\\Documentos\\Projetos\\clonenetflix\\src\\components\\MovieRow.jsx":"4","C:\\Users\\sique\\OneDrive\\Documentos\\Projetos\\clonenetflix\\src\\components\\FeaturedMovie.jsx":"5","C:\\Users\\sique\\OneDrive\\Documentos\\Projetos\\clonenetflix\\src\\components\\Header.jsx":"6"},{"size":200,"mtime":1608352185965,"results":"7","hashOfConfig":"8"},{"size":1166,"mtime":1608415860984,"results":"9","hashOfConfig":"8"},{"size":2604,"mtime":1608389905526,"results":"10","hashOfConfig":"8"},{"size":672,"mtime":1608351110777,"results":"11","hashOfConfig":"8"},{"size":1606,"mtime":1608355630603,"results":"12","hashOfConfig":"8"},{"size":296,"mtime":1608426977959,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1f8qw38",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"16"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\sique\\OneDrive\\Documentos\\Projetos\\clonenetflix\\src\\index.js",[],["31","32"],"C:\\Users\\sique\\OneDrive\\Documentos\\Projetos\\clonenetflix\\src\\App.js",["33"],"import React, { useEffect, useState } from 'react'\nimport './App.css'\nimport Tmdb from './Tmdb'\nimport MovieRow from './components/MovieRow'\nimport FeaturedMovie from './components/FeaturedMovie'\nimport Header from './components/Header'\n\nexport default () => {\n\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null)\n\n  useEffect(() => {\n    const loadAll = async () => {\n      let list = await Tmdb.getHomeList();\n      setMovieList(list)\n\n      let originals = list.filter(i => i.slug === 'originais')\n      let ramdonChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n      let chosen = originals[0].items.results[ramdonChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\n      setFeaturedData(chosenInfo);\n    }\n    loadAll();\n  }, []);\n\n  return (\n    <div className=\"page\">\n      <Header/>\n      {featuredData &&\n        <FeaturedMovie item={featuredData}/>\n      }\n      <section className=\"lists\">\n        {movieList.map((item, key) => (\n          <MovieRow key={key} title={item.title} items={item.items}/>\n        ))}\n      </section>\n    </div>\n  );\n}\n\n\n","C:\\Users\\sique\\OneDrive\\Documentos\\Projetos\\clonenetflix\\src\\Tmdb.js",["34"],"const API_KEY = \"b74dac5904d72e4eeb5ab31c39cb1e8e\";\r\nconst API_BASE = \"https://api.themoviedb.org/3\";\r\n\r\n\r\nconst basicFetch = async (endpoint) => {\r\n    const req = await fetch(`${API_BASE}${endpoint}`);\r\n    const json = await req.json();\r\n    return json;\r\n}\r\n\r\nexport default {\r\n    getHomeList: async () => {\r\n        return [\r\n            {\r\n                slug: 'originais',\r\n                title: 'Originais do Netflix',\r\n                items: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'trending',\r\n                title: 'Recomendados para Voçê',\r\n                items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'toprate',\r\n                title: 'Em Alta',\r\n                items: await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'action',\r\n                title: 'Ação',\r\n                items: await basicFetch(`/discover/movie?with_generes=28&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'comody',\r\n                title: 'Comedia',\r\n                items: await basicFetch(`/discover/movie?with_generes=35&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'horror',\r\n                title: 'Terror',\r\n                items: await basicFetch(`/discover/movie?with_generes=27&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'romance',\r\n                title: 'Romance',\r\n                items: await basicFetch(`/discover/movie?with_generes=10749&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'documentary',\r\n                title: 'Documentario',\r\n                items: await basicFetch(`/discover/movie?with_generes=99&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n        ]\r\n    },\r\n    getMovieInfo: async (movieId, type) => {\r\n        let info = {};\r\n\r\n        if(movieId) {\r\n            switch(type) {\r\n                case 'movie':\r\n                info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`)\r\n                break;\r\n                case 'tv':\r\n                    info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`)\r\n                break;\r\n                default:\r\n                    info = null;\r\n                break;\r\n            }\r\n        }\r\n        return info;\r\n    }\r\n}","C:\\Users\\sique\\OneDrive\\Documentos\\Projetos\\clonenetflix\\src\\components\\MovieRow.jsx",["35"],"import React from 'react'\r\nimport './MovieRow.css'\r\nexport default ({ title, items }) => {\r\n    return (\r\n        <div className=\"movierow\">\r\n            <h2>{title}</h2>\r\n            <div className=\"movierow--listarea\">\r\n                <div className=\"movierow--list\">\r\n                    {items.results.length > 0 && items.results.map((item, key) => (\r\n                        <div key={key} className=\"movierow--item\">\r\n                            <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title} />\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","C:\\Users\\sique\\OneDrive\\Documentos\\Projetos\\clonenetflix\\src\\components\\FeaturedMovie.jsx",["36","37"],"import React from 'react'\r\nimport './FeaturedMovie.css'\r\n\r\nexport default ({item}) => {\r\n    let firstDate = new Date(item.first_air_date);\r\n    let generos = [];\r\n    for(let i in item.generos) {\r\n        generos.push(item.generos[i].name )\r\n    }\r\n    return (\r\n        <section className=\"featured\" style={{\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: 'center',\r\n            backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\r\n        }}>\r\n            <div className=\"featured--vertical\">\r\n                <div className=\"featured--horizontal\">\r\n                    <div className=\"featured--name\">{item.original_name}</div>\r\n                    <div className=\"featured--info\">\r\n                        <div className=\"featured--points\">{item.vote_average} pontos</div>\r\n                        <div className=\"featured--year\">{firstDate.getFullYear()}</div>\r\n                        <div className=\"featured--seasons\">{item.number_of_seasons} temporada{item.number_of_seasons != 1 ? 's' : ''}</div>\r\n                        <div className=\"featured--description\">{item.overview}</div>\r\n                        <div className=\"featured--buttons\">\r\n                            <a href={`/watch/${item.id}`}>Assistir</a>\r\n                            <a href={`/list/add/${item.id}`}>+ Minha Lista</a>\r\n                        </div>\r\n                        <div className=\"featured--generes\"><strong>Gêneros:</strong>{generos.join(', ')}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    )\r\n}","C:\\Users\\sique\\OneDrive\\Documentos\\Projetos\\clonenetflix\\src\\components\\Header.jsx",["38","39"],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":8,"column":1,"nodeType":"46","endLine":40,"endColumn":2},{"ruleId":"44","severity":1,"message":"47","line":11,"column":1,"nodeType":"46","endLine":74,"endColumn":2},{"ruleId":"44","severity":1,"message":"45","line":3,"column":1,"nodeType":"46","endLine":18,"endColumn":2},{"ruleId":"44","severity":1,"message":"45","line":4,"column":1,"nodeType":"46","endLine":34,"endColumn":2},{"ruleId":"48","severity":1,"message":"49","line":22,"column":118,"nodeType":"50","messageId":"51","endLine":22,"endColumn":120},{"ruleId":"44","severity":1,"message":"45","line":4,"column":1,"nodeType":"46","endLine":14,"endColumn":2},{"ruleId":"52","severity":1,"message":"53","line":9,"column":21,"nodeType":"54","endLine":9,"endColumn":33},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]